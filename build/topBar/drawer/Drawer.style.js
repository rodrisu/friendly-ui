"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StyledDimmer = exports.StyledDrawer = void 0;
var styled_components_1 = __importDefault(require("styled-components"));
var branding_1 = require("../../_utils/branding");
exports.StyledDrawer = styled_components_1.default.aside(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  /* z-index handled in main application */\n\n  &.kirk-drawer--open {\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: ", "; /* z-index defined in main application, above dimmer - below topBar */\n    visibility: visible;\n    transition-delay: 0;\n  }\n\n  &.kirk-drawer--close {\n    visibility: hidden; /* Hiding the drawer when closed, otherwise on mac/ios we can scroll top off screen and see it */\n    transition-delay: 300ms;\n    transition-property: visibility;\n  }\n\n  & .kirk-drawer-scrollableContent {\n    position: absolute;\n    z-index: 2;\n    left: 0;\n    top: ", ";\n    bottom: 0;\n    overflow-y: auto;\n    background-color: ", ";\n    transition: transform ", " ease-in-out;\n    will-change: transform;\n    transform: translateY(-100%);\n    max-width: 100%;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  &.kirk-drawer--open .kirk-drawer-scrollableContent {\n    box-shadow: 0 36px 36px 0 rgba(0, 0, 0, 0.3);\n    transform: translateY(0%);\n  }\n\n  &.kirk-drawer--close .kirk-drawer-scrollableContent {\n    transform: translateY(-100%);\n  }\n\n  @media (", ") {\n    && {\n      left: 50%;\n      right: auto;\n      top: 0;\n      bottom: 0;\n      width: 100%;\n      width: ", ";\n      position: fixed;\n      transform: translate(-50%, 0);\n    }\n\n    .kirk-drawer-scrollableContent {\n      top: ", ";\n      left: auto;\n      right: auto;\n      width: ", ";\n      float: right;\n      position: relative;\n    }\n\n    &.kirk-drawer--close .kirk-drawer-scrollableContent {\n      transform: translateY(-100vh);\n    }\n  }\n"], ["\n  /* z-index handled in main application */\n\n  &.kirk-drawer--open {\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: ", "; /* z-index defined in main application, above dimmer - below topBar */\n    visibility: visible;\n    transition-delay: 0;\n  }\n\n  &.kirk-drawer--close {\n    visibility: hidden; /* Hiding the drawer when closed, otherwise on mac/ios we can scroll top off screen and see it */\n    transition-delay: 300ms;\n    transition-property: visibility;\n  }\n\n  & .kirk-drawer-scrollableContent {\n    position: absolute;\n    z-index: 2;\n    left: 0;\n    top: ", ";\n    bottom: 0;\n    overflow-y: auto;\n    background-color: ", ";\n    transition: transform ", " ease-in-out;\n    will-change: transform;\n    transform: translateY(-100%);\n    max-width: 100%;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  &.kirk-drawer--open .kirk-drawer-scrollableContent {\n    box-shadow: 0 36px 36px 0 rgba(0, 0, 0, 0.3);\n    transform: translateY(0%);\n  }\n\n  &.kirk-drawer--close .kirk-drawer-scrollableContent {\n    transform: translateY(-100%);\n  }\n\n  @media (", ") {\n    && {\n      left: 50%;\n      right: auto;\n      top: 0;\n      bottom: 0;\n      width: 100%;\n      width: ", ";\n      position: fixed;\n      transform: translate(-50%, 0);\n    }\n\n    .kirk-drawer-scrollableContent {\n      top: ", ";\n      left: auto;\n      right: auto;\n      width: ", ";\n      float: right;\n      position: relative;\n    }\n\n    &.kirk-drawer--close .kirk-drawer-scrollableContent {\n      transform: translateY(-100vh);\n    }\n  }\n"])), function (props) {
    return props.$zIndex;
}, branding_1.componentSizes.headerHeight.small, branding_1.color.white, branding_1.transition.duration.base, branding_1.responsiveBreakpoints.isMediaLarge, branding_1.componentSizes.headerWidth.large, branding_1.componentSizes.headerHeight.large, branding_1.componentSizes.drawerWidth.large);
exports.StyledDimmer = styled_components_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  visibility: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #000;\n  opacity: 0;\n  transition: opacity 350ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n\n  &.kirk-drawer-dimmer--active {\n    visibility: visible;\n    opacity: 0.07;\n    z-index: ", "; /* z-index defined in main application, below drawer */\n  }\n"], ["\n  visibility: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #000;\n  opacity: 0;\n  transition: opacity 350ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n\n  &.kirk-drawer-dimmer--active {\n    visibility: visible;\n    opacity: 0.07;\n    z-index: ", "; /* z-index defined in main application, below drawer */\n  }\n"])), function (props) { return props.$zIndex; });
var templateObject_1, templateObject_2;
